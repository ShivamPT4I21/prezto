##################################################
# vim: ft=zsh
#
# A simple theme that displays relevant, contextual information.
#
# Authors:
#   Joseph Tannhuber <sepp.tannhuber@yahoo.com>
##################################################

# Load dependencies.
pmodload 'helper'

function prompt_dangerous_user {
unset _prompt_dangerous_user
if [[ -n "$SSH_CLIENT" || $UID -eq 0 ]]; then
    _prompt_dangerous_user="❮❮❮ %(!.%{${_prompt_dangerous_colors[4]}%B%}.)%n"
elif [[ "$pwd_format" != "none" ]]; then
    _prompt_dangerous_user="❮❮❮ "
fi
}

function pwdtoggle {
pwd_format=$PWDFORMAT[$(( $PWDFORMAT[(i)$pwd_format]%${#PWDFORMAT}+1 ))]
prompt_dangerous_user
prompt_dangerous_pwd
zle reset-prompt
}
zle -N pwdtoggle
bindkey -M vicmd ' ' pwdtoggle
bindkey -M viins '^ ' pwdtoggle
bindkey -M emacs '^ ' pwdtoggle

function prompt_dangerous_pwd {
local pwd="${PWD/#$HOME/~}"
unset _prompt_dangerous_pwd
if [[ -n "$SSH_CLIENT" || $UID -eq 0 ]]; then
    _prompt_dangerous_pwd="@%M"
    if [[ "$pwd_format" != "none" ]]; then
        _prompt_dangerous_pwd+=":"
    else
        _prompt_dangerous_pwd+=" "
    fi
fi
if [[ "$pwd_format" == "complete" ]]; then
    _prompt_dangerous_pwd+="%~ "
elif [[ "$pwd_format" == "truncated" ]]; then
    if [[ "$pwd" == (#m)[/~] ]]; then
        _prompt_dangerous_pwd+="$MATCH "
        unset MATCH
    else
        _prompt_dangerous_pwd+="${${${${(@j:/:M)${(@s:/:)pwd}##.#?}:h}%/}//\%/%%}/${${pwd:t}//\%/%%} "
    fi
fi
}

function prompt_dangerous_indicator {
if [[ "%${editor_info[vimode]}" == "%${_prompt_dangerous_colors[5]}" ]]; then
    print -n "%{${_prompt_dangerous_cursor[1]}${editor_info[vimode]}%}"
elif [[ "%${editor_info[vimode]}" == "%${_prompt_dangerous_colors[8]}" ]]; then
    print -n "%{${_prompt_dangerous_cursor[2]}${editor_info[vimode]}%}"
else
    print -n "%{${_prompt_dangerous_cursor[3]}${editor_info[vimode]}%}"
fi
}

function prompt_dangerous_symbols {
if [[ -w . ]]; then
    _prompt_dangerous_symbols=""
else
    _prompt_dangerous_symbols=" %B${_prompt_dangerous_colors[4]}%f%b"
fi
_prompt_dangerous_symbols+="${VIM:+" %B${_prompt_dangerous_colors[7]}V%f%b"}"
_prompt_dangerous_symbols+="${RANGER_LEVEL:+" %B${_prompt_dangerous_colors[7]}R%f%b"}"
_prompt_dangerous_symbols+="%1(j. ${_prompt_dangerous_colors[9]}⚙%f.)"
_prompt_dangerous_symbols+="%(?:: %B${_prompt_dangerous_colors[5]}↵%f%b)"
_prompt_dangerous_symbols+="%f%(!. %B${_prompt_dangerous_colors[4]}⚡%f%b.)"
}

function prompt_dangerous_precmd {
setopt LOCAL_OPTIONS
unsetopt XTRACE KSH_ARRAYS

# Format Username.
prompt_dangerous_user

# Format PWD.
prompt_dangerous_pwd

# Format Symbols.
prompt_dangerous_symbols

# Get Git repository information.
if (( $+functions[git-info] )); then
    git-info
fi

# Calculate runtime of previous command
cmdtime=$(( ($(date +%s) - $starttime)/60 ))
if [[ $cmdtime -eq 0 ]]; then
    runtime=""
else
    minutes=$(( $cmdtime%1440%60 ))"m"
    if [[ $cmdtime -ge 60 ]]; then
        hours=$(( $cmdtime%1440/60 ))"h"
        if [[ $cmdtime -ge 1440 ]]; then
            days=$(( $cmdtime/1440 ))"d"
        fi
    fi
    runtime="${_prompt_dangerous_colors[1]}❮❮❮ $days$hours$minutes "
fi

# Removes the whitespace character at the end of the right prompt.
ZLE_RPROMPT_INDENT=0
}

function prompt_dangerous_preexec {
starttime=$(date +%s)
}

function prompt_dangerous_setup {
setopt LOCAL_OPTIONS
unsetopt XTRACE KSH_ARRAYS
prompt_opts=(cr percent subst)

# Load required functions.
autoload -Uz add-zsh-hook

# Add hook for calling git-info before each command.
add-zsh-hook precmd prompt_dangerous_precmd
add-zsh-hook preexec prompt_dangerous_preexec

# Load color palette.
_prompt_dangerous_colors=(
"%F{241}"
"%F{254}"
"%F{136}"
"%F{166}"
"%F{160}"
"%F{125}"
"%F{61}"
"%F{33}"
"%F{37}"
"%F{64}"
)

# Cursor colors.
unsupported_terminals=("fbterm" "st")
if [[ ! "${unsupported_terminals[(r)$TERM]}" == "$TERM" ]]; then
    _prompt_dangerous_cursor=(
    "\033]12;#dc322f\007"
    "\033]12;#268bd2\007"
    "\033]12;#b58900\007"
    )
fi

# Set editor-info parameters.
zstyle ':prezto:module:editor:info:completing' format "%B${_prompt_dangerous_colors[5]}...%f%b"
zstyle ':prezto:module:editor:info:keymap:primary:insert' format "${_prompt_dangerous_colors[3]}"
zstyle ':prezto:module:editor:info:keymap:primary:overwrite' format "${_prompt_dangerous_colors[5]}"
zstyle ':prezto:module:editor:info:keymap:alternate' format "${_prompt_dangerous_colors[8]}"

# Set git-info parameters.
zstyle ':prezto:module:git:info' verbose 'yes'
zstyle ':prezto:module:git:info:action' format ":%%B${_prompt_dangerous_colors[2]}%s%f%%b"
zstyle ':prezto:module:git:info:added' format " %%B${_prompt_dangerous_colors[10]}✚%f%%b"
zstyle ':prezto:module:git:info:ahead' format " %%B${_prompt_dangerous_colors[7]}↑%f%%b"
zstyle ':prezto:module:git:info:behind' format " %%B${_prompt_dangerous_colors[7]}↓%f%%b"
zstyle ':prezto:module:git:info:branch' format "${_prompt_dangerous_colors[1]}  %b%s"
zstyle ':prezto:module:git:info:commit' format "${_prompt_dangerous_colors[10]}  %.7c%s"
zstyle ':prezto:module:git:info:deleted' format " %%B${_prompt_dangerous_colors[5]}✖%f%%b"
zstyle ':prezto:module:git:info:modified' format " %%B${_prompt_dangerous_colors[8]}✱%f%%b"
zstyle ':prezto:module:git:info:position' format "${_prompt_dangerous_colors[6]}  %p%s"
zstyle ':prezto:module:git:info:renamed' format " %%B${_prompt_dangerous_colors[6]}→%f%%b"
zstyle ':prezto:module:git:info:stashed' format " %%B${_prompt_dangerous_colors[9]}✭%f%%b"
zstyle ':prezto:module:git:info:unmerged' format " %%B${_prompt_dangerous_colors[7]}═%f%%b"
zstyle ':prezto:module:git:info:untracked' format " %%B${_prompt_dangerous_colors[2]}●%f%%b"
zstyle ':prezto:module:git:info:keys' format \
    'prompt' '$(coalesce "%b" "%p" "%c") ❯❯❯%f' \
    'rprompt' '%A%B%S%a%d%m%r%U%u'

# Define prompts.
PROMPT='$(prompt_dangerous_indicator)❯❯❯${git_info:+${(e)git_info[prompt]}}${_prompt_dangerous_symbols} '
RPROMPT='${git_info[rprompt]} ${runtime}${editor_info[vimode]}${_prompt_dangerous_user}%b${editor_info[vimode]}${_prompt_dangerous_pwd}❮❮❮'
SPROMPT='zsh: correct ${_prompt_dangerous_colors[5]}%R%f to ${_prompt_dangerous_colors[10]}%r%f [nyae]? '
}

starttime=$(date +%s)
if [[ -z $PWDFORMAT ]]; then
    PWDFORMAT=("truncated" "complete" "none")
else
    PWDFORMAT=($=PWDFORMAT)
fi
pwd_format=$PWDFORMAT[1]
prompt_dangerous_setup "$@"
